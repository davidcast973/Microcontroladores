

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Dec 10 23:29:42 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     	FNCALL	_main,_sound
   400                           	FNROOT	_main
   401                           	global	_INTCONbits
   402                           _INTCONbits	set	0xB
   403  000B                     	global	_PORTCbits
   404                           _PORTCbits	set	0x7
   405  0007                     	global	_TMR0
   406                           _TMR0	set	0x1
   407  0001                     	global	_PORTD
   408                           _PORTD	set	0x8
   409  0008                     	global	_PORTB
   410                           _PORTB	set	0x6
   411  0006                     	global	_WPUB
   412                           _WPUB	set	0x95
   413  0095                     	global	_TRISC
   414                           _TRISC	set	0x87
   415  0087                     	global	_OPTION_REGbits
   416                           _OPTION_REGbits	set	0x81
   417  0081                     	global	_TRISD
   418                           _TRISD	set	0x88
   419  0088                     	global	_TRISB
   420                           _TRISB	set	0x86
   421  0086                     	global	_ANSELH
   422                           _ANSELH	set	0x189
   423  0189                     ; #config settings
   424                           global __CFG_FOSC$HS
   425                           __CFG_FOSC$HS equ 0x0
   426  0000                     global __CFG_WDTE$OFF
   427                           __CFG_WDTE$OFF equ 0x0
   428  0000                     	file	"/tmp/xcXRBC3yq"
   429                           	line	#
   430                           psect cinit,class=CODE,delta=2
   431                           global start_initialization
   432                           start_initialization:
   433  07FC                     
   434                           global __initialization
   435                           __initialization:
   436  07FC                     psect cinit,class=CODE,delta=2,merge=1
   437                           global end_of_initialization,__end_of__initialization
   438                           
   439                           ;End of C runtime variable initialization code
   440                           
   441                           end_of_initialization:
   442  07FC                     __end_of__initialization:
   443  07FC                     clrf status
   444  07FC  0183               ljmp _main	;jump to C main() function
   445  07FD  120A  118A  2F17   psect	cstackCOMMON,class=COMMON,space=1,noexec
   446                           global __pcstackCOMMON
   447                           __pcstackCOMMON:
   448  0070                     ?_sound:	; 1 bytes @ 0x0
   449  0070                     ?_main:	; 1 bytes @ 0x0
   450  0070                     	global	sound@numTMR0
   451                           sound@numTMR0:	; 2 bytes @ 0x0
   452  0070                     	ds	2
   453  0070                     	global	sound@numComplementoTMR0
   454                           sound@numComplementoTMR0:	; 2 bytes @ 0x2
   455  0072                     	ds	2
   456  0072                     ??_sound:	; 1 bytes @ 0x4
   457  0074                     	ds	1
   458  0074                     	global	sound@i
   459                           sound@i:	; 2 bytes @ 0x5
   460  0075                     	ds	2
   461  0075                     	global	sound@j
   462                           sound@j:	; 2 bytes @ 0x7
   463  0077                     	ds	2
   464  0077                     ??_main:	; 1 bytes @ 0x9
   465  0079                     	ds	2
   466  0079                     ;!
   467                           ;!Data Sizes:
   468                           ;!    Strings     0
   469                           ;!    Constant    0
   470                           ;!    Data        0
   471                           ;!    BSS         0
   472                           ;!    Persistent  0
   473                           ;!    Stack       0
   474                           ;!
   475                           ;!Auto Spaces:
   476                           ;!    Space          Size  Autos    Used
   477                           ;!    COMMON           14     11      11
   478                           ;!    BANK0            80      0       0
   479                           ;!    BANK1            80      0       0
   480                           ;!    BANK3            96      0       0
   481                           ;!    BANK2            96      0       0
   482                           
   483                           ;!
   484                           ;!Pointer List with Targets:
   485                           ;!
   486                           ;!    None.
   487                           
   488                           
   489                           ;!
   490                           ;!Critical Paths under _main in COMMON
   491                           ;!
   492                           ;!    _main->_sound
   493                           ;!
   494                           ;!Critical Paths under _main in BANK0
   495                           ;!
   496                           ;!    None.
   497                           ;!
   498                           ;!Critical Paths under _main in BANK1
   499                           ;!
   500                           ;!    None.
   501                           ;!
   502                           ;!Critical Paths under _main in BANK3
   503                           ;!
   504                           ;!    None.
   505                           ;!
   506                           ;!Critical Paths under _main in BANK2
   507                           ;!
   508                           ;!    None.
   509                           
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   512 ;;
   513                           
   514                           ;!
   515                           ;!Call Graph Tables:
   516                           ;!
   517                           ;! ---------------------------------------------------------------------------------
   518                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   519                           ;! ---------------------------------------------------------------------------------
   520                           ;! (0) _main                                                 2     2      0    1808
   521                           ;!                                              9 COMMON     2     2      0
   522                           ;!                              _sound
   523                           ;! ---------------------------------------------------------------------------------
   524                           ;! (1) _sound                                                9     5      4    1808
   525                           ;!                                              0 COMMON     9     5      4
   526                           ;! ---------------------------------------------------------------------------------
   527                           ;! Estimated maximum stack depth 1
   528                           ;! ---------------------------------------------------------------------------------
   529                           ;!
   530                           ;! Call Graph Graphs:
   531                           ;!
   532                           ;! _main (ROOT)
   533                           ;!   _sound
   534                           ;!
   535                           
   536                           ;! Address spaces:
   537                           
   538                           ;!Name               Size   Autos  Total    Cost      Usage
   539                           ;!BITCOMMON            E      0       0       0        0.0%
   540                           ;!EEDATA             100      0       0       0        0.0%
   541                           ;!NULL                 0      0       0       0        0.0%
   542                           ;!CODE                 0      0       0       0        0.0%
   543                           ;!COMMON               E      B       B       1       78.6%
   544                           ;!BITSFR0              0      0       0       1        0.0%
   545                           ;!SFR0                 0      0       0       1        0.0%
   546                           ;!BITSFR1              0      0       0       2        0.0%
   547                           ;!SFR1                 0      0       0       2        0.0%
   548                           ;!STACK                0      0       0       2        0.0%
   549                           ;!ABS                  0      0       0       3        0.0%
   550                           ;!BITBANK0            50      0       0       4        0.0%
   551                           ;!BITSFR3              0      0       0       4        0.0%
   552                           ;!SFR3                 0      0       0       4        0.0%
   553                           ;!BANK0               50      0       0       5        0.0%
   554                           ;!BITSFR2              0      0       0       5        0.0%
   555                           ;!SFR2                 0      0       0       5        0.0%
   556                           ;!BITBANK1            50      0       0       6        0.0%
   557                           ;!BANK1               50      0       0       7        0.0%
   558                           ;!BITBANK3            60      0       0       8        0.0%
   559                           ;!BANK3               60      0       0       9        0.0%
   560                           ;!BITBANK2            60      0       0      10        0.0%
   561                           ;!BANK2               60      0       0      11        0.0%
   562                           ;!DATA                 0      0       0      12        0.0%
   563                           
   564                           	global	_main
   565                           
   566 ;; *************** function _main *****************
   567 ;; Defined at:
   568 ;;		line 29 in file "pianito.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : B00/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0
   584 ;;      Temps:          2       0       0       0       0
   585 ;;      Totals:         2       0       0       0       0
   586 ;;Total ram usage:        2 bytes
   587 ;; Hardware stack levels required when called:    1
   588 ;; This function calls:
   589 ;;		_sound
   590 ;; This function is called by:
   591 ;;		Startup code after reset
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   595                           	file	"pianito.c"
   596                           	line	29
   597                           global __pmaintext
   598                           __pmaintext:	;psect for function _main
   599  0717                     psect	maintext
   600                           	file	"pianito.c"
   601                           	line	29
   602                           	global	__size_of_main
   603                           	__size_of_main	equ	__end_of_main-_main
   604  00E5                     	
   605                           _main:	
   606  0717                     ;incstack = 0
   607                           	opt	stack 7
   608                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   609                           	line	32
   610                           	
   611                           l785:	
   612  0717                     ;pianito.c: 32:                 sound(435, 112);
   613                           	movlw	low(02h)
   614  0717  3002               	bsf	status, 5	;RP0=1, select bank3
   615  0718  1683               	bsf	status, 6	;RP1=1, select bank3
   616  0719  1703               	movwf	(393)^0180h	;volatile
   617  071A  0089               	line	34
   618                           ;pianito.c: 34:             case 1:
   619                           	movlw	low(0FFh)
   620  071B  30FF               	bsf	status, 5	;RP0=1, select bank1
   621  071C  1683               	bcf	status, 6	;RP1=0, select bank1
   622  071D  1303               	movwf	(134)^080h	;volatile
   623  071E  0086               	line	35
   624                           ;pianito.c: 35:                 sound(385, 93);
   625                           	movlw	low(0FFh)
   626  071F  30FF               	movwf	(136)^080h	;volatile
   627  0720  0088               	line	37
   628                           	
   629                           l787:	
   630  0721                     ;pianito.c: 37:             case 0:
   631                           	bcf	(129)^080h,7	;volatile
   632  0721  1381               	line	39
   633                           ;pianito.c: 39:                 break;
   634                           	movlw	low(0F7h)
   635  0722  30F7               	movwf	(135)^080h	;volatile
   636  0723  0087               	line	40
   637                           ;pianito.c: 40:             default:
   638                           	movlw	low(0FFh)
   639  0724  30FF               	movwf	(149)^080h	;volatile
   640  0725  0095               	goto	l789
   641  0726  2F27               	line	42
   642                           ;pianito.c: 42:         }
   643                           	
   644                           l29:	
   645  0727                     	line	46
   646                           	
   647                           l789:	
   648  0727                     ;pianito.c: 46:                 break;
   649                           	bsf	status, 5	;RP0=1, select bank1
   650  0727  1683               	bcf	status, 6	;RP1=0, select bank1
   651  0728  1303               	bcf	(129)^080h,5	;volatile
   652  0729  1281               	line	47
   653                           	
   654                           l791:	
   655  072A                     ;pianito.c: 47:             case 32:
   656                           	bsf	(129)^080h,4	;volatile
   657  072A  1601               	line	48
   658                           	
   659                           l793:	
   660  072B                     ;pianito.c: 48:                 sound(294, 43);
   661                           	bcf	(129)^080h,3	;volatile
   662  072B  1181               	line	51
   663                           ;pianito.c: 51:                 sound(263, 18);
   664                           	goto	l807
   665  072C  2F7F               	line	52
   666                           ;pianito.c: 52:                 break;
   667                           	
   668                           l31:	
   669  072D                     	line	53
   670                           	
   671                           l795:	
   672  072D                     ;pianito.c: 53:             case 1:
   673                           	movlw	0Eh
   674  072D  300E               	movwf	(sound@numTMR0)
   675  072E  00F0               	movlw	02h
   676  072F  3002               	movwf	((sound@numTMR0))+1
   677  0730  00F1               	movlw	012h
   678  0731  3012               	movwf	(sound@numComplementoTMR0)
   679  0732  00F2               	movlw	0
   680  0733  3000               	movwf	((sound@numComplementoTMR0))+1
   681  0734  00F3               	fcall	_sound
   682  0735  120A  118A  26CE  120A  118A  	line	54
   683                           ;pianito.c: 54:                 sound(385, 93);
   684                           	goto	l819
   685  073A  2FDF               	line	55
   686                           ;pianito.c: 55:                 break;
   687                           	
   688                           l33:	
   689  073B                     	line	56
   690                           	
   691                           l797:	
   692  073B                     ;pianito.c: 56:             default:
   693                           	movlw	0F4h
   694  073B  30F4               	movwf	(sound@numTMR0)
   695  073C  00F0               	movlw	01h
   696  073D  3001               	movwf	((sound@numTMR0))+1
   697  073E  00F1               	movlw	082h
   698  073F  3082               	movwf	(sound@numComplementoTMR0)
   699  0740  00F2               	movlw	0
   700  0741  3000               	movwf	((sound@numComplementoTMR0))+1
   701  0742  00F3               	fcall	_sound
   702  0743  120A  118A  26CE  120A  118A  	line	57
   703                           ;pianito.c: 57:                 sound(0, 0);
   704                           	goto	l819
   705  0748  2FDF               	line	58
   706                           ;pianito.c: 58:         }
   707                           	
   708                           l34:	
   709  0749                     	line	59
   710                           	
   711                           l799:	
   712  0749                     ;pianito.c: 59:     }
   713                           	movlw	0B3h
   714  0749  30B3               	movwf	(sound@numTMR0)
   715  074A  00F0               	movlw	01h
   716  074B  3001               	movwf	((sound@numTMR0))+1
   717  074C  00F1               	movlw	070h
   718  074D  3070               	movwf	(sound@numComplementoTMR0)
   719  074E  00F2               	movlw	0
   720  074F  3000               	movwf	((sound@numComplementoTMR0))+1
   721  0750  00F3               	fcall	_sound
   722  0751  120A  118A  26CE  120A  118A  	line	60
   723                           ;pianito.c: 60: }
   724                           	goto	l819
   725  0756  2FDF               	line	61
   726                           ;pianito.c: 61: 
   727                           	
   728                           l35:	
   729  0757                     	line	62
   730                           	
   731                           l801:	
   732  0757                     ;pianito.c: 62: void sound(int numTMR0, int numComplementoTMR0) {
   733                           	movlw	081h
   734  0757  3081               	movwf	(sound@numTMR0)
   735  0758  00F0               	movlw	01h
   736  0759  3001               	movwf	((sound@numTMR0))+1
   737  075A  00F1               	movlw	05Dh
   738  075B  305D               	movwf	(sound@numComplementoTMR0)
   739  075C  00F2               	movlw	0
   740  075D  3000               	movwf	((sound@numComplementoTMR0))+1
   741  075E  00F3               	fcall	_sound
   742  075F  120A  118A  26CE  120A  118A  	line	63
   743                           ;pianito.c: 63:     int i, j;
   744                           	goto	l819
   745  0764  2FDF               	line	64
   746                           ;pianito.c: 64: 
   747                           	
   748                           l36:	
   749  0765                     	line	65
   750                           	
   751                           l803:	
   752  0765                     ;pianito.c: 65:     OPTION_REGbits.PS2 = 0;
   753                           	movlw	059h
   754  0765  3059               	movwf	(sound@numTMR0)
   755  0766  00F0               	movlw	01h
   756  0767  3001               	movwf	((sound@numTMR0))+1
   757  0768  00F1               	movlw	04Ah
   758  0769  304A               	movwf	(sound@numComplementoTMR0)
   759  076A  00F2               	movlw	0
   760  076B  3000               	movwf	((sound@numComplementoTMR0))+1
   761  076C  00F3               	fcall	_sound
   762  076D  120A  118A  26CE  120A  118A  	line	66
   763                           ;pianito.c: 66:     OPTION_REGbits.PS1 = 1;
   764                           	goto	l819
   765  0772  2FDF               	line	67
   766                           ;pianito.c: 67:     OPTION_REGbits.PS0 = 0;
   767                           	
   768                           l37:	
   769  0773                     	line	68
   770                           	
   771                           l805:	
   772  0773                     ;pianito.c: 68: 
   773                           	movlw	0
   774  0773  3000               	movwf	(sound@numTMR0)
   775  0774  00F0               	movwf	(sound@numTMR0+1)
   776  0775  00F1               	movlw	0
   777  0776  3000               	movwf	(sound@numComplementoTMR0)
   778  0777  00F2               	movwf	(sound@numComplementoTMR0+1)
   779  0778  00F3               	fcall	_sound
   780  0779  120A  118A  26CE  120A  118A  	line	69
   781                           ;pianito.c: 69:     TMR0 = numComplementoTMR0;
   782                           	goto	l819
   783  077E  2FDF               	
   784                           l30:	
   785  077F                     	
   786                           l807:	
   787  077F                     	bcf	status, 5	;RP0=0, select bank0
   788  077F  1283               	bcf	status, 6	;RP1=0, select bank0
   789  0780  1303               	movf	(6),w	;volatile
   790  0781  0806               	movwf	(??_main+0)+0
   791  0782  00F9               	clrf	(??_main+0)+0+1
   792  0783  01FA               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
   793                           ; Switch size 1, requested type "space"
   794                           ; Number of cases is 1, Range of values is 0 to 0
   795                           ; switch strategies available:
   796                           ; Name         Instructions Cycles
   797                           ; simple_byte            4     3 (average)
   798                           ; direct_byte           11     8 (fixed)
   799                           ; jumptable            260     6 (fixed)
   800                           ;	Chosen strategy is simple_byte
   801                           
   802                           	movf 1+(??_main+0)+0,w
   803  0784  087A               	opt asmopt_push
   804                           	opt asmopt_off
   805                           	xorlw	0^0	; case 0
   806  0785  3A00               	skipnz
   807  0786  1903               	goto	l893
   808  0787  2F89               	goto	l805
   809  0788  2F73               	opt asmopt_pop
   810                           	
   811                           l893:	
   812  0789                     ; Switch size 1, requested type "space"
   813                           ; Number of cases is 5, Range of values is 0 to 16
   814                           ; switch strategies available:
   815                           ; Name         Instructions Cycles
   816                           ; simple_byte           16     9 (average)
   817                           ; direct_byte           59     8 (fixed)
   818                           ; jumptable            260     6 (fixed)
   819                           ;	Chosen strategy is simple_byte
   820                           
   821                           	movf 0+(??_main+0)+0,w
   822  0789  0879               	opt asmopt_push
   823                           	opt asmopt_off
   824                           	xorlw	0^0	; case 0
   825  078A  3A00               	skipnz
   826  078B  1903               	goto	l803
   827  078C  2F65               	xorlw	1^0	; case 1
   828  078D  3A01               	skipnz
   829  078E  1903               	goto	l801
   830  078F  2F57               	xorlw	2^1	; case 2
   831  0790  3A03               	skipnz
   832  0791  1903               	goto	l799
   833  0792  2F49               	xorlw	8^2	; case 8
   834  0793  3A0A               	skipnz
   835  0794  1903               	goto	l797
   836  0795  2F3B               	xorlw	16^8	; case 16
   837  0796  3A18               	skipnz
   838  0797  1903               	goto	l795
   839  0798  2F2D               	goto	l805
   840  0799  2F73               	opt asmopt_pop
   841                           
   842                           	
   843                           l32:	
   844  079A                     	line	70
   845                           ;pianito.c: 70: 
   846                           	goto	l819
   847  079A  2FDF               	line	71
   848                           ;pianito.c: 71:     for (i = 0; i < numTMR0; i++) {
   849                           	
   850                           l39:	
   851  079B                     	line	72
   852                           	
   853                           l809:	
   854  079B                     ;pianito.c: 72:         while (INTCONbits.T0IF != 1) {
   855                           	movlw	04Dh
   856  079B  304D               	movwf	(sound@numTMR0)
   857  079C  00F0               	movlw	01h
   858  079D  3001               	movwf	((sound@numTMR0))+1
   859  079E  00F1               	movlw	0A2h
   860  079F  30A2               	movwf	(sound@numComplementoTMR0)
   861  07A0  00F2               	movlw	0
   862  07A1  3000               	movwf	((sound@numComplementoTMR0))+1
   863  07A2  00F3               	fcall	_sound
   864  07A3  120A  118A  26CE  120A  118A  	line	73
   865                           ;pianito.c: 73: 
   866                           	goto	l789
   867  07A8  2F27               	line	74
   868                           ;pianito.c: 74:             if (j == 0)
   869                           	
   870                           l41:	
   871  07A9                     	line	75
   872                           	
   873                           l811:	
   874  07A9                     ;pianito.c: 75:                 PORTCbits.RC3 = 1;
   875                           	movlw	026h
   876  07A9  3026               	movwf	(sound@numTMR0)
   877  07AA  00F0               	movlw	01h
   878  07AB  3001               	movwf	((sound@numTMR0))+1
   879  07AC  00F1               	movlw	02Bh
   880  07AD  302B               	movwf	(sound@numComplementoTMR0)
   881  07AE  00F2               	movlw	0
   882  07AF  3000               	movwf	((sound@numComplementoTMR0))+1
   883  07B0  00F3               	fcall	_sound
   884  07B1  120A  118A  26CE  120A  118A  	line	76
   885                           ;pianito.c: 76:             else
   886                           	goto	l789
   887  07B6  2F27               	line	77
   888                           ;pianito.c: 77:                 PORTCbits.RC3 = 0;
   889                           	
   890                           l42:	
   891  07B7                     	line	78
   892                           	
   893                           l813:	
   894  07B7                     ;pianito.c: 78:         }
   895                           	movlw	07h
   896  07B7  3007               	movwf	(sound@numTMR0)
   897  07B8  00F0               	movlw	01h
   898  07B9  3001               	movwf	((sound@numTMR0))+1
   899  07BA  00F1               	movlw	012h
   900  07BB  3012               	movwf	(sound@numComplementoTMR0)
   901  07BC  00F2               	movlw	0
   902  07BD  3000               	movwf	((sound@numComplementoTMR0))+1
   903  07BE  00F3               	fcall	_sound
   904  07BF  120A  118A  26CE  120A  118A  	line	79
   905                           ;pianito.c: 79:     }
   906                           	goto	l789
   907  07C4  2F27               	line	80
   908                           ;pianito.c: 80: 
   909                           	
   910                           l43:	
   911  07C5                     	line	81
   912                           	
   913                           l815:	
   914  07C5                     ;pianito.c: 81:     TMR0 = numComplementoTMR0;
   915                           	movlw	081h
   916  07C5  3081               	movwf	(sound@numTMR0)
   917  07C6  00F0               	movlw	01h
   918  07C7  3001               	movwf	((sound@numTMR0))+1
   919  07C8  00F1               	movlw	05Dh
   920  07C9  305D               	movwf	(sound@numComplementoTMR0)
   921  07CA  00F2               	movlw	0
   922  07CB  3000               	movwf	((sound@numComplementoTMR0))+1
   923  07CC  00F3               	fcall	_sound
   924  07CD  120A  118A  26CE  120A  118A  	line	82
   925                           ;pianito.c: 82:     INTCONbits.T0IF = 0;
   926                           	goto	l789
   927  07D2  2F27               	line	83
   928                           ;pianito.c: 83: 
   929                           	
   930                           l44:	
   931  07D3                     	line	84
   932                           	
   933                           l817:	
   934  07D3                     ;pianito.c: 84: 
   935                           	movlw	0
   936  07D3  3000               	movwf	(sound@numTMR0)
   937  07D4  00F0               	movwf	(sound@numTMR0+1)
   938  07D5  00F1               	movlw	0
   939  07D6  3000               	movwf	(sound@numComplementoTMR0)
   940  07D7  00F2               	movwf	(sound@numComplementoTMR0+1)
   941  07D8  00F3               	fcall	_sound
   942  07D9  120A  118A  26CE  120A  118A  	line	85
   943                           ;pianito.c: 85:     if (j == 0)
   944                           	goto	l789
   945  07DE  2F27               	
   946                           l38:	
   947  07DF                     	
   948                           l819:	
   949  07DF                     	bcf	status, 5	;RP0=0, select bank0
   950  07DF  1283               	bcf	status, 6	;RP1=0, select bank0
   951  07E0  1303               	movf	(8),w	;volatile
   952  07E1  0808               	movwf	(??_main+0)+0
   953  07E2  00F9               	clrf	(??_main+0)+0+1
   954  07E3  01FA               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
   955                           ; Switch size 1, requested type "space"
   956                           ; Number of cases is 1, Range of values is 0 to 0
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte            4     3 (average)
   960                           ; direct_byte           11     8 (fixed)
   961                           ; jumptable            260     6 (fixed)
   962                           ;	Chosen strategy is simple_byte
   963                           
   964                           	movf 1+(??_main+0)+0,w
   965  07E4  087A               	opt asmopt_push
   966                           	opt asmopt_off
   967                           	xorlw	0^0	; case 0
   968  07E5  3A00               	skipnz
   969  07E6  1903               	goto	l895
   970  07E7  2FE9               	goto	l817
   971  07E8  2FD3               	opt asmopt_pop
   972                           	
   973                           l895:	
   974  07E9                     ; Switch size 1, requested type "space"
   975                           ; Number of cases is 4, Range of values is 1 to 64
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte           13     7 (average)
   979                           ; direct_byte          203    11 (fixed)
   980                           ; jumptable            263     9 (fixed)
   981                           ;	Chosen strategy is simple_byte
   982                           
   983                           	movf 0+(??_main+0)+0,w
   984  07E9  0879               	opt asmopt_push
   985                           	opt asmopt_off
   986                           	xorlw	1^0	; case 1
   987  07EA  3A01               	skipnz
   988  07EB  1903               	goto	l815
   989  07EC  2FC5               	xorlw	2^1	; case 2
   990  07ED  3A03               	skipnz
   991  07EE  1903               	goto	l813
   992  07EF  2FB7               	xorlw	32^2	; case 32
   993  07F0  3A22               	skipnz
   994  07F1  1903               	goto	l811
   995  07F2  2FA9               	xorlw	64^32	; case 64
   996  07F3  3A60               	skipnz
   997  07F4  1903               	goto	l809
   998  07F5  2F9B               	goto	l817
   999  07F6  2FD3               	opt asmopt_pop
  1000                           
  1001                           	
  1002                           l40:	
  1003  07F7                     	goto	l789
  1004  07F7  2F27               	line	86
  1005                           ;pianito.c: 86:         j = 1;
  1006                           	
  1007                           l45:	
  1008  07F8                     	goto	l789
  1009  07F8  2F27               	
  1010                           l46:	
  1011  07F9                     	line	87
  1012                           	
  1013                           l47:	
  1014  07F9                     	global	start
  1015                           	ljmp	start
  1016  07F9  120A  118A  2800   	opt stack 0
  1017                           GLOBAL	__end_of_main
  1018                           	__end_of_main:
  1019  07FC                     	signat	_main,89
  1020                           	global	_sound
  1021                           
  1022 ;; *************** function _sound *****************
  1023 ;; Defined at:
  1024 ;;		line 89 in file "pianito.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  numTMR0         2    0[COMMON] int 
  1027 ;;  numComplemen    2    2[COMMON] int 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  j               2    7[COMMON] int 
  1030 ;;  i               2    5[COMMON] int 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         4       0       0       0       0
  1041 ;;      Locals:         4       0       0       0       0
  1042 ;;      Temps:          1       0       0       0       0
  1043 ;;      Totals:         9       0       0       0       0
  1044 ;;Total ram usage:        9 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1053                           	line	89
  1054                           global __ptext1
  1055                           __ptext1:	;psect for function _sound
  1056  06CE                     psect	text1
  1057                           	file	"pianito.c"
  1058                           	line	89
  1059                           	global	__size_of_sound
  1060                           	__size_of_sound	equ	__end_of_sound-_sound
  1061  0049                     	
  1062                           _sound:	
  1063  06CE                     ;incstack = 0
  1064                           	opt	stack 7
  1065                           ; Regs used in _sound: [wreg+status,2+status,0]
  1066                           	line	92
  1067                           	
  1068                           l763:	
  1069  06CE                     	bsf	status, 5	;RP0=1, select bank1
  1070  06CE  1683               	bcf	status, 6	;RP1=0, select bank1
  1071  06CF  1303               	bcf	(129)^080h,2	;volatile
  1072  06D0  1101               	line	93
  1073                           	bsf	(129)^080h,1	;volatile
  1074  06D1  1481               	line	94
  1075                           	bcf	(129)^080h,0	;volatile
  1076  06D2  1001               	line	96
  1077                           	
  1078                           l765:	
  1079  06D3                     	movf	(sound@numComplementoTMR0),w
  1080  06D3  0872               	bcf	status, 5	;RP0=0, select bank0
  1081  06D4  1283               	bcf	status, 6	;RP1=0, select bank0
  1082  06D5  1303               	movwf	(1)	;volatile
  1083  06D6  0081               	line	98
  1084                           	
  1085                           l767:	
  1086  06D7                     	clrf	(sound@i)
  1087  06D7  01F5               	clrf	(sound@i+1)
  1088  06D8  01F6               	goto	l50
  1089  06D9  2EF4               	
  1090                           l51:	
  1091  06DA                     	line	99
  1092                           	goto	l52
  1093  06DA  2EE9               	
  1094                           l53:	
  1095  06DB                     	line	101
  1096                           	
  1097                           l769:	
  1098  06DB                     	movf	((sound@j)),w
  1099  06DB  0877               iorwf	((sound@j+1)),w
  1100  06DC  0478               	btfss	status,2
  1101  06DD  1D03               	goto	u51
  1102  06DE  2EE0               	goto	u50
  1103  06DF  2EE1               u51:
  1104  06E0                     	goto	l54
  1105  06E0  2EE5               u50:
  1106  06E1                     	line	102
  1107                           	
  1108                           l771:	
  1109  06E1                     	bcf	status, 5	;RP0=0, select bank0
  1110  06E1  1283               	bcf	status, 6	;RP1=0, select bank0
  1111  06E2  1303               	bsf	(7),3	;volatile
  1112  06E3  1587               	goto	l52
  1113  06E4  2EE9               	line	103
  1114                           	
  1115                           l54:	
  1116  06E5                     	line	104
  1117                           	bcf	status, 5	;RP0=0, select bank0
  1118  06E5  1283               	bcf	status, 6	;RP1=0, select bank0
  1119  06E6  1303               	bcf	(7),3	;volatile
  1120  06E7  1187               	goto	l52
  1121  06E8  2EE9               	
  1122                           l55:	
  1123  06E9                     	line	105
  1124                           	
  1125                           l52:	
  1126  06E9                     	line	99
  1127                           	btfss	(11),2	;volatile
  1128  06E9  1D0B               	goto	u61
  1129  06EA  2EEC               	goto	u60
  1130  06EB  2EED               u61:
  1131  06EC                     	goto	l769
  1132  06EC  2EDB               u60:
  1133  06ED                     	goto	l773
  1134  06ED  2EEE               	
  1135                           l56:	
  1136  06EE                     	line	106
  1137                           	
  1138                           l773:	
  1139  06EE                     	movlw	01h
  1140  06EE  3001               	addwf	(sound@i),f
  1141  06EF  07F5               	skipnc
  1142  06F0  1803               	incf	(sound@i+1),f
  1143  06F1  0AF6               	movlw	0
  1144  06F2  3000               	addwf	(sound@i+1),f
  1145  06F3  07F6               	
  1146                           l50:	
  1147  06F4                     	movf	(sound@i+1),w
  1148  06F4  0876               	xorlw	80h
  1149  06F5  3A80               	movwf	(??_sound+0)+0
  1150  06F6  00F4               	movf	(sound@numTMR0+1),w
  1151  06F7  0871               	xorlw	80h
  1152  06F8  3A80               	subwf	(??_sound+0)+0,w
  1153  06F9  0274               	skipz
  1154  06FA  1D03               	goto	u75
  1155  06FB  2EFE               	movf	(sound@numTMR0),w
  1156  06FC  0870               	subwf	(sound@i),w
  1157  06FD  0275               u75:
  1158  06FE                     
  1159                           	skipc
  1160  06FE  1C03               	goto	u71
  1161  06FF  2F01               	goto	u70
  1162  0700  2F02               u71:
  1163  0701                     	goto	l52
  1164  0701  2EE9               u70:
  1165  0702                     	goto	l775
  1166  0702  2F03               	
  1167                           l57:	
  1168  0703                     	line	108
  1169                           	
  1170                           l775:	
  1171  0703                     	movf	(sound@numComplementoTMR0),w
  1172  0703  0872               	bcf	status, 5	;RP0=0, select bank0
  1173  0704  1283               	bcf	status, 6	;RP1=0, select bank0
  1174  0705  1303               	movwf	(1)	;volatile
  1175  0706  0081               	line	109
  1176                           	
  1177                           l777:	
  1178  0707                     	bcf	(11),2	;volatile
  1179  0707  110B               	line	112
  1180                           	
  1181                           l779:	
  1182  0708                     	movf	((sound@j)),w
  1183  0708  0877               iorwf	((sound@j+1)),w
  1184  0709  0478               	btfss	status,2
  1185  070A  1D03               	goto	u81
  1186  070B  2F0D               	goto	u80
  1187  070C  2F0E               u81:
  1188  070D                     	goto	l783
  1189  070D  2F13               u80:
  1190  070E                     	line	113
  1191                           	
  1192                           l781:	
  1193  070E                     	movlw	01h
  1194  070E  3001               	movwf	(sound@j)
  1195  070F  00F7               	movlw	0
  1196  0710  3000               	movwf	((sound@j))+1
  1197  0711  00F8               	goto	l60
  1198  0712  2F16               	line	114
  1199                           	
  1200                           l58:	
  1201  0713                     	line	115
  1202                           	
  1203                           l783:	
  1204  0713                     	clrf	(sound@j)
  1205  0713  01F7               	clrf	(sound@j+1)
  1206  0714  01F8               	goto	l60
  1207  0715  2F16               	
  1208                           l59:	
  1209  0716                     	line	116
  1210                           	
  1211                           l60:	
  1212  0716                     	return
  1213  0716  0008               	opt stack 0
  1214                           GLOBAL	__end_of_sound
  1215                           	__end_of_sound:
  1216  0717                     	signat	_sound,8313
  1217                           global	___latbits
  1218                           ___latbits	equ	2
  1219  0002                     	global	btemp
  1220                           	btemp set 07Eh
  1221  007E                     
  1222                           	DABS	1,126,2	;btemp
  1223                           	global	wtemp0
  1224                           	wtemp0 set btemp+0
  1225  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sound

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1808
                                              9 COMMON     2     2      0
                              _sound
 ---------------------------------------------------------------------------------
 (1) _sound                                                9     5      4    1808
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sound

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Dec 10 23:29:42 2018

                     l30 077F                       l31 072D                       l40 07F7  
                     l32 079A                       l41 07A9                       l33 073B  
                     l50 06F4                       l42 07B7                       l34 0749  
                     l51 06DA                       l43 07C5                       l35 0757  
                     l60 0716                       l52 06E9                       l44 07D3  
                     l36 0765                       l53 06DB                       l45 07F8  
                     l37 0773                       l29 0727                       l54 06E5  
                     l46 07F9                       l38 07DF                       l55 06E9  
                     l47 07F9                       l39 079B                       l56 06EE  
                     l57 0703                       l58 0713                       l59 0716  
                     u50 06E1                       u51 06E0                       u60 06ED  
                     u61 06EC                       u70 0702                       u71 0701  
                     u80 070E                       u81 070D                       u75 06FE  
                    l801 0757                      l811 07A9                      l803 0765  
                    l813 07B7                      l805 0773                      l815 07C5  
                    l807 077F                      l817 07D3                      l809 079B  
                    l771 06E1                      l763 06CE                      l819 07DF  
                    l781 070E                      l773 06EE                      l765 06D3  
                    l783 0713                      l775 0703                      l767 06D7  
                    l791 072A                      l777 0707                      l769 06DB  
                    l793 072B                      l785 0717                      l779 0708  
                    l795 072D                      l787 0721                      l893 0789  
                    l797 073B                      l789 0727                      l895 07E9  
                    l799 0749             __CFG_FOSC$HS 0000                     _TMR0 0001  
                   _WPUB 0095                     _main 0717                     btemp 007E  
                   start 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _sound 06CE  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0079                   _ANSELH 0189  
                 ?_sound 0070                   sound@i 0075                   sound@j 0077  
           sound@numTMR0 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_sound 0717           _OPTION_REGbits 0081  sound@numComplementoTMR0 0072  
                ??_sound 0074               __pmaintext 0717                  __ptext1 06CE  
   end_of_initialization 07FC                _PORTCbits 0007      start_initialization 07FC  
              ___latbits 0002           __size_of_sound 0049            __size_of_main 00E5  
             _INTCONbits 000B  
